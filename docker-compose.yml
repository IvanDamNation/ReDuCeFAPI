services:

  app:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: ${APP_NAME}
    env_file:
      - ".env"
    volumes:
      - ./src:/app_workdir/src
    ports:
      - "${APP_HOST}:${APP_PORT}:${APP_PORT}"
    depends_on:
      redis-ddup:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
    tty: true
  
  redis-ddup:
    image: redis:7.4.2-alpine
    container_name: ${REDIS_DDUP_HOST}
    restart: always
    env_file:
      - ".env"
    ports:
      - "6379:${REDIS_PORT}"
    volumes:
      - "redis_data_ddup:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
      start_period: 10s

  redis-queue:
    image: redis:7.4.2-alpine
    container_name: ${REDIS_QUEUE_HOST}
    restart: always
    env_file:
      - ".env"
    ports:
      - "6380:${REDIS_PORT}"
    volumes:
      - "redis_data_ddup:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
      start_period: 10s

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: worker --loglevel=info -Q ddup_queue
    env_file:
      - ".env"
    depends_on:
      redis-ddup:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
      app:
        condition: service_started
    tty: true

  flower:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: flower
    command: --broker=redis://${REDIS_QUEUE_HOST}:${REDIS_PORT}/0 flower --port=${FLOWER_PORT}
    env_file:
      - ".env"
    ports:
      - "${FLOWER_PORT}:${FLOWER_PORT}"
    depends_on:
      redis-queue:
        condition: service_healthy

volumes:
  redis_data_ddup:
  redis_data_queue: