services:

  app:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: ${APP_NAME}
    env_file:
      - ".env"
    volumes:
      - ./src:/app_workdir/src
    ports:
      - "${APP_HOST}:${APP_PORT}:${APP_PORT}"
    depends_on:
      redis-ddup:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
    tty: true
  
  redis-ddup:
    image: redis:7.4.2-alpine
    container_name: redis-ddup
    restart: always
    ports:
      - "${REDIS_DDUP_PORT}:6379"
    volumes:
      - "redis_data_ddup:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
      start_period: 10s

  redis-queue:
    image: redis:7.4.2-alpine
    container_name: redis-queue
    restart: always
    ports:
      - "${REDIS_QUEUE_PORT}:6379"
    volumes:
      - "redis_data_ddup:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
      start_period: 10s

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery
    command: worker --loglevel=info -Q ddup_queue
    env_file:
      - ".env"
    depends_on:
      redis-ddup:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
      app:
        condition: service_started
    tty: true

  flower:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: flower
    command: --broker=redis://redis-queue:6379/0 flower --port=5555
    env_file:
      - ".env"
    ports:
      - "${FLOWER_PORT}:5555"
    depends_on:
      - celery

volumes:
  redis_data_ddup:
  redis_data_queue: